////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/mcnla/core/matrix/set/vector_set_wrapper.ipp
/// @brief   The implementation of vector set wrapper.
///
/// @author  Mu Yang <<emfomy@gmail.com>>
///

#ifndef MCNLA_CORE_MATRIX_SET_VECTOR_SET_WRAPPER_IPP_
#define MCNLA_CORE_MATRIX_SET_VECTOR_SET_WRAPPER_IPP_

#include <mcnla/core/matrix/set/vector_set_wrapper.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The MCNLA namespace.
//
namespace mcnla {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The matrix namespace.
//
namespace matrix {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Default constructor.
///
template <class _Derived>
VectorSetWrapper<_Derived>::VectorSetWrapper() noexcept {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the length of vector.
///
template <class _Derived>
index_t VectorSetWrapper<_Derived>::getLength() const noexcept {
  return this->derived().getLength();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the number of vectors.
///
template <class _Derived>
index_t VectorSetWrapper<_Derived>::getNvec() const noexcept {
  return this->derived().getNvec();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the sizes.
///
template <class _Derived>
std::pair<index_t, index_t> VectorSetWrapper<_Derived>::getSizes() const noexcept {
  return std::make_tuple(getLength()(), getNvec());
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets a vector
///
template <class _Derived>
typename VectorSetWrapper<_Derived>::VectorType VectorSetWrapper<_Derived>::operator()(
    const index_t idx
) noexcept {
  return this->derived().getVector(idx);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  operator()( const index_t )
///
template <class _Derived>
const typename VectorSetWrapper<_Derived>::VectorType VectorSetWrapper<_Derived>::operator()(
    const index_t idx
) const noexcept {
  return this->derived().getVector(idx);
}

}  // namespace matrix

}  // namespace mcnla

#endif  // MCNLA_CORE_MATRIX_SET_VECTOR_SET_WRAPPER_IPP_
