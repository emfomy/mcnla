////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/mcnla/core/container/base/container_wrapper.hpp
/// @brief   The container wrapper.
///
/// @author  Mu Yang <<emfomy@gmail.com>>
///

#ifndef MCNLA_CORE_CONTAINER_BASE_CONTAINER_WRAPPER_HPP_
#define MCNLA_CORE_CONTAINER_BASE_CONTAINER_WRAPPER_HPP_

#include <mcnla/core/container/base/container_wrapper.hh>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The MCNLA namespace.
//
namespace mcnla {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The container namespace.
//
namespace container {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the iterator to beginning.
///
template <class _Derived>
IteratorT<_Derived> ContainerWrapper<_Derived>::begin() noexcept {
  return IteratorType::beginImpl(&(this->derived()));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  begin
///
template <class _Derived>
ConstIteratorT<_Derived> ContainerWrapper<_Derived>::begin() const noexcept {
  return ConstIteratorType::beginImpl(&(this->derived()));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  begin
///
template <class _Derived>
ConstIteratorT<_Derived> ContainerWrapper<_Derived>::cbegin() const noexcept {
  return ConstIteratorType::beginImpl(&(this->derived()));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the iterator to end.
///
template <class _Derived>
IteratorT<_Derived> ContainerWrapper<_Derived>::end() noexcept {
  return IteratorType::endImpl(&(this->derived()));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  end
///
template <class _Derived>
ConstIteratorT<_Derived> ContainerWrapper<_Derived>::end() const noexcept {
  return ConstIteratorType::endImpl(&(this->derived()));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  end
///
template <class _Derived>
ConstIteratorT<_Derived> ContainerWrapper<_Derived>::cend() const noexcept {
  return ConstIteratorType::endImpl(&(this->derived()));
}

}  // namespace container

}  // namespace mcnla

#endif  // MCNLA_CORE_CONTAINER_BASE_CONTAINER_WRAPPER_HPP_
