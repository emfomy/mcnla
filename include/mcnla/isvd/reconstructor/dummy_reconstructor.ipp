////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/mcnla/isvd/reconstructor/dummy_reconstructor.ipp
/// @brief   The implementation of dummy reconstructor.
///
/// @author  Mu Yang <<emfomy@gmail.com>>
///

#ifndef MCNLA_ISVD_RECONSTRUCTOR_DUMMY_RECONSTRUCTOR_IPP_
#define MCNLA_ISVD_RECONSTRUCTOR_DUMMY_RECONSTRUCTOR_IPP_

#include <mcnla/isvd/reconstructor/dummy_reconstructor.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The MCNLA namespace.
//
namespace mcnla {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The iSVD namespace.
//
namespace isvd {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::ReconstructorBase
///
template <class _Matrix>
DummyReconstructor<_Matrix>::DummyReconstructor(
    const Parameters<ScalarType> &parameters
) noexcept : BaseType(parameters) {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::initialize
///
template <class _Matrix>
void DummyReconstructor<_Matrix>::initializeImpl() noexcept {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::reconstruct
///
template <class _Matrix>
void DummyReconstructor<_Matrix>::reconstructImpl(
    const _Matrix &matrix_a,
    const DenseMatrix<ScalarType, Layout::ROWMAJOR> &matrix_qc
) noexcept { static_cast<void>(matrix_a); static_cast<void>(matrix_qc); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::nvecame
///
template <class _Matrix>
constexpr const char* DummyReconstructor<_Matrix>::nvecameImpl() const noexcept {
  return name_;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::getTime
///
template <class _Matrix>
double DummyReconstructor<_Matrix>::getTimeImpl() const noexcept {
  return 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @copydoc  mcnla::isvd::ReconstructorBase::getTimes
///
template <class _Matrix>
const std::vector<double> DummyReconstructor<_Matrix>::getTimesImpl() const noexcept {
  return {};
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn  DummyReconstructor::getVectorSImpl
/// @copydoc  mcnla::isvd::ReconstructorBase::getVectorS
///
/// @attention  This routine is not available.
///

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn  DummyReconstructor::getMatrixUImpl
/// @copydoc  mcnla::isvd::ReconstructorBase::getMatrixU
///
/// @attention  This routine is not available.
///

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @fn  DummyReconstructor::getMatrixVtImpl
/// @copydoc  mcnla::isvd::ReconstructorBase::getMatrixVt
///
/// @attention  This routine is not available.
///

}  // namespace isvd

}  // namespace mcnla

#endif  // MCNLA_ISVD_RECONSTRUCTOR_DUMMY_RECONSTRUCTOR_IPP_
