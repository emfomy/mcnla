////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/isvd/matrix/matrix.ipp
/// @brief   The implementation of matrix interface.
///
/// @author  Mu Yang <emfomy@gmail.com>
///

#ifndef ISVD_MATRIX_MATRIX_IPP_
#define ISVD_MATRIX_MATRIX_IPP_

#include <isvd/matrix/matrix.hpp>
#include <utility>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The iSVD namespace.
//
namespace isvd {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Default constructor.
///
template <class _Data>
Matrix<_Data>::Matrix() noexcept
  : data_(new _Data()) {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Copy constructor.
///
template <class _Data>
Matrix<_Data>::Matrix(
    const Matrix &other
) noexcept
  : data_(other.data_) {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Construct with given data.
///
template <class _Data>
Matrix<_Data>::Matrix( _Data *data ) noexcept
  : data_(data) {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Default destructor.
///
template <class _Data>
Matrix<_Data>::~Matrix() noexcept {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Copy assignment operator.
///
template <class _Data>
Matrix<_Data>& Matrix<_Data>::operator=(
    const Matrix &other
) noexcept {
  data_ = other.data_;
  return *this;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Gets the number of rows.
///
template <class _Data>
index_t Matrix<_Data>::getNrow() const noexcept {
  return data_->getNrow();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Gets the number of columns.
///
template <class _Data>
index_t Matrix<_Data>::getNcol() const noexcept {
  return data_->getNcol();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Gets the data storage
///
template <class _Data>
_Data* Matrix<_Data>::getData() const noexcept {
  return data_.get();
}

}  // namespace isvd

#endif  // ISVD_MATRIX_MATRIX_IPP_
