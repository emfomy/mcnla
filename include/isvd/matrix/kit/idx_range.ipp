////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/isvd/matrix/kit/idx_range.ipp
/// @brief   The implementation of index range.
///
/// @author  Mu Yang <<emfomy@gmail.com>>
///

#ifndef ISVD_MATRIX_KIT_INDEX_RANGE_IPP_
#define ISVD_MATRIX_KIT_INDEX_RANGE_IPP_

#include <isvd/isvd.hpp>
#include <isvd/matrix/kit/idx_range.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The iSVD namespace.
//
namespace isvd {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Equal-to operator.
///
bool IdxRange::operator==( const IdxRange& other ) const noexcept { return (begin == other.begin && end == other.end); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Not-equal-to operator.
///
bool IdxRange::operator!=( const IdxRange& other ) const noexcept { return !(*this == other); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the length of the range.
///
index_t IdxRange::getLength() const noexcept { return (end-begin); }

}  // namespace isvd

#endif  // ISVD_MATRIX_KIT_INDEX_RANGE_IPP_
