////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file    include/isvd/matrix/matrix_base.ipp
/// @brief   The implementation of matrix interface.
///
/// @author  Mu Yang <emfomy@gmail.com>
///

#ifndef ISVD_MATRIX_MATRIX_BASE_IPP_
#define ISVD_MATRIX_MATRIX_BASE_IPP_

#include <isvd/matrix/matrix_base.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The iSVD namespace.
//
namespace isvd {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  The implementation namespace.
//
namespace impl {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the number of rows.
///
template <class _Derived>
index_t MatrixBase<_Derived>::getNrow() const noexcept { return this->derived().getNrowImpl(); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the number of columns.
///
template <class _Derived>
index_t MatrixBase<_Derived>::getNcol() const noexcept { return this->derived().getNcolImpl(); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Gets the size.
///
template <class _Derived>
index_t MatrixBase<_Derived>::getSize() const noexcept { return this->derived().getSizeImpl(); }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Resize the vector
///
template <class _Derived>
void MatrixBase<_Derived>::resize(
    const index_t nrow,
    const index_t ncol
) noexcept { return this->derived().resizeImpl(nrow, ncol); }

}  // namespace impl

}  // namespace isvd

#endif  // ISVD_MATRIX_MATRIX_BASE_IPP_
